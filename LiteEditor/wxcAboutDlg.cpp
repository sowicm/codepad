//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: AboutDlg.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#include "wxcAboutDlg.h"


// Declare the bitmap loading function
extern void wxC3415InitBitmapResources();

static bool bBitmapLoaded = false;


AboutDlgBase::AboutDlgBase(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxDialog(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxC3415InitBitmapResources();
        bBitmapLoaded = true;
    }
    
    wxBoxSizer* mainSizer = new wxBoxSizer(wxVERTICAL);
    this->SetSizer(mainSizer);
    
    wxBoxSizer* boxSizer23 = new wxBoxSizer(wxHORIZONTAL);
    
    mainSizer->Add(boxSizer23, 1, wxALL|wxEXPAND, 5);
    
    boxSizer23->Add(0, 0, 1, wxALL, 5);
    
    m_staticText5 = new wxStaticText(this, wxID_ANY, _("Sowicm's Codepad"), wxDefaultPosition, wxSize(-1,-1), wxALIGN_CENTRE);
    m_staticText5->SetForegroundColour(wxColour(wxT("rgb(255,255,255)")));
    wxFont m_staticText5Font(24, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL, false, wxT(".SF NS Text"));
    m_staticText5->SetFont(m_staticText5Font);
    
    boxSizer23->Add(m_staticText5, 0, wxALL|wxEXPAND, 5);
    
    boxSizer23->Add(0, 0, 1, wxALL, 5);
    
    wxBoxSizer* boxSizer25 = new wxBoxSizer(wxVERTICAL);
    
    mainSizer->Add(boxSizer25, 1, wxALL|wxEXPAND, 5);
    
    wxBoxSizer* boxSizer27 = new wxBoxSizer(wxHORIZONTAL);
    
    mainSizer->Add(boxSizer27, 1, wxALL|wxEXPAND, 5);
    
    boxSizer27->Add(0, 0, 1, wxALL, 5);
    
    wxFlexGridSizer* flexGridSizer21 = new wxFlexGridSizer(0, 1, 0, 0);
    flexGridSizer21->SetFlexibleDirection( wxBOTH );
    flexGridSizer21->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    boxSizer27->Add(flexGridSizer21, 1, wxALL|wxEXPAND, 5);
    
    wxFlexGridSizer* fgSizer1 = new wxFlexGridSizer(0, 2, 0, 0);
    fgSizer1->SetFlexibleDirection( wxBOTH );
    fgSizer1->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
    
    flexGridSizer21->Add(fgSizer1, 1, wxALL|wxEXPAND, 5);
    
    m_staticText13 = new wxStaticText(this, wxID_ANY, _("Copyright (c) 2010-2016"), wxDefaultPosition, wxSize(-1,-1), 0);
    m_staticText13->SetForegroundColour(wxColour(wxT("rgb(255,255,255)")));
    
    fgSizer1->Add(m_staticText13, 0, wxALL, 5);
    
    m_hyperLink9 = new wxHyperlinkCtrl(this, wxID_ANY, _("rym@zrym.me"), wxT("http://weibo.com/zhizunmingshuai"), wxDefaultPosition, wxSize(-1,-1), wxHL_DEFAULT_STYLE);
    m_hyperLink9->SetNormalColour(wxColour(wxT("rgb(255,255,255)")));
    m_hyperLink9->SetHoverColour(wxColour(wxT("rgb(255,255,255)")));
    m_hyperLink9->SetVisitedColour(wxColour(wxT("rgb(255,255,255)")));
    
    fgSizer1->Add(m_hyperLink9, 0, wxALL, 5);
    
    boxSizer27->Add(0, 0, 1, wxALL, 5);
    
    SetBackgroundColour(wxColour(wxT("rgb(64,64,64)")));
    SetForegroundColour(wxColour(wxT("rgb(64,64,64)")));
    SetName(wxT("AboutDlgBase"));
    SetSizeHints(320,150);
    if ( GetSizer() ) {
         GetSizer()->Fit(this);
    }
    CentreOnParent(wxBOTH);
#if wxVERSION_NUMBER >= 2900
    if(!wxPersistenceManager::Get().Find(this)) {
        wxPersistenceManager::Get().RegisterAndRestore(this);
    } else {
        wxPersistenceManager::Get().Restore(this);
    }
#endif
}

AboutDlgBase::~AboutDlgBase()
{
}
